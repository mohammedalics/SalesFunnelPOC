package com.oracle.anc.fmwpoc.sf.model;

import com.oracle.anc.fmwpoc.sf.model.views.OpportunitiesViewImpl;

import java.sql.PreparedStatement;

import java.sql.ResultSet;
import java.sql.SQLException;

import oracle.adf.share.ADFContext;

import oracle.jbo.Session;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Jan 18 10:22:03 EET 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SalesFunnelModuleImpl extends ApplicationModuleImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public SalesFunnelModuleImpl() {
    }

    /**
     * Container's getter for AccountsView1.
     * @return AccountsView1
     */
    public ViewObjectImpl getAccountsView1() {
        return (ViewObjectImpl)findViewObject("AccountsView1");
    }

    /**
     * Container's getter for ContactsView1.
     * @return ContactsView1
     */
    public ViewObjectImpl getContactsView1() {
        return (ViewObjectImpl)findViewObject("ContactsView1");
    }

    /**
     * Container's getter for EmployeesView1.
     * @return EmployeesView1
     */
    public ViewObjectImpl getEmployeesView1() {
        return (ViewObjectImpl)findViewObject("EmployeesView1");
    }

    /**
     * Container's getter for OpportunitiesView1.
     * @return OpportunitiesView1
     */
    public OpportunitiesViewImpl getOpportunitiesView1() {
        return (OpportunitiesViewImpl)findViewObject("OpportunitiesView1");
    }

    /**
     * Container's getter for ContactsView2.
     * @return ContactsView2
     */
    public ViewObjectImpl getContactsView2() {
        return (ViewObjectImpl)findViewObject("ContactsView2");
    }

    /**
     * Container's getter for ContactsView3.
     * @return ContactsView3
     */
    public ViewObjectImpl getContactsView3() {
        return (ViewObjectImpl)findViewObject("ContactsView3");
    }

    /**
     * Container's getter for EmployeesView2.
     * @return EmployeesView2
     */
    public ViewObjectImpl getEmployeesView2() {
        return (ViewObjectImpl)findViewObject("EmployeesView2");
    }

    /**
     * Container's getter for OpportunitiesView2.
     * @return OpportunitiesView2
     */
    public OpportunitiesViewImpl getOpportunitiesView2() {
        return (OpportunitiesViewImpl)findViewObject("OpportunitiesView2");
    }

    /**
     * Container's getter for OpportunitiesView3.
     * @return OpportunitiesView3
     */
    public OpportunitiesViewImpl getOpportunitiesView3() {
        return (OpportunitiesViewImpl)findViewObject("OpportunitiesView3");
    }

    /**
     * Container's getter for OpportunitiesView4.
     * @return OpportunitiesView4
     */
    public OpportunitiesViewImpl getOpportunitiesView4() {
        return (OpportunitiesViewImpl)findViewObject("OpportunitiesView4");
    }

    /**
     * Container's getter for ContactsContactsFk1Link1.
     * @return ContactsContactsFk1Link1
     */
    public ViewLinkImpl getContactsContactsFk1Link1() {
        return (ViewLinkImpl)findViewLink("ContactsContactsFk1Link1");
    }

    /**
     * Container's getter for ContactsAccountsFk1Link1.
     * @return ContactsAccountsFk1Link1
     */
    public ViewLinkImpl getContactsAccountsFk1Link1() {
        return (ViewLinkImpl)findViewLink("ContactsAccountsFk1Link1");
    }

    /**
     * Container's getter for EmpManagerFk1Link1.
     * @return EmpManagerFk1Link1
     */
    public ViewLinkImpl getEmpManagerFk1Link1() {
        return (ViewLinkImpl)findViewLink("EmpManagerFk1Link1");
    }

    /**
     * Container's getter for OppAccFk1Link1.
     * @return OppAccFk1Link1
     */
    public ViewLinkImpl getOppAccFk1Link1() {
        return (ViewLinkImpl)findViewLink("OppAccFk1Link1");
    }

    /**
     * Container's getter for OppCntFk1Link1.
     * @return OppCntFk1Link1
     */
    public ViewLinkImpl getOppCntFk1Link1() {
        return (ViewLinkImpl)findViewLink("OppCntFk1Link1");
    }

    /**
     * Container's getter for OppEmpFk1Link1.
     * @return OppEmpFk1Link1
     */
    public ViewLinkImpl getOppEmpFk1Link1() {
        return (ViewLinkImpl)findViewLink("OppEmpFk1Link1");
    }

    private void storeUserEmpIdInSession() {
        if (super.getSession().getUserData() == null)
            return;
        if (super.getSession().getUserData().containsKey("empId"))
            return;
        {
            PreparedStatement stmt =
                getDBTransaction().createPreparedStatement("select emp_id from employees where username='" +
                                                           ADFContext.getCurrent().getSecurityContext().getUserName() +
                                                           "'", 0);
            try {
                stmt.execute();
                ResultSet rs = stmt.getResultSet();
                if (rs != null) {
                    rs.next();
                    Integer emp_id = rs.getInt("emp_id");
                    if (emp_id != null) {
                        super.getSession().getUserData().put("empId", emp_id);
                        ADFContext.getCurrent().getSessionScope().put("empId",
                                                                      emp_id);
                    }
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    protected void prepareSession(Session session) {
        super.prepareSession(session);
        storeUserEmpIdInSession();
    }
}
